@{
    ViewData["Title"] = "Shopping List";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/shoppinglist.css" asp-append-version="true" />
}

<!-- Main Content -->
<div class="shoppinglist-page">
    <div class="shoppinglist-content">
        <!-- Header Section -->
        <div class="shoppinglist-header">
            <h2 class="shoppinglist-title">Shopping List</h2>
            <div class="header-actions">
                <div class="search-filter-section">
                    <input type="text" id="searchInput" placeholder="Tìm kiếm items..." class="search-input">
                    <select id="categoryFilter" class="category-filter">
                        <option value="">Tất cả danh mục</option>
                        <option value="meat">Thịt & Cá</option>
                        <option value="vegetables">Rau củ</option>
                        <option value="grains">Ngũ cốc</option>
                        <option value="dairy">Sữa & Trứng</option>
                        <option value="spices">Gia vị</option>
                        <option value="other">Khác</option>
                    </select>
                </div>
                <button class="add-item-btn" onclick="addNewItem()">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <line x1="12" y1="5" x2="12" y2="19"></line>
                        <line x1="5" y1="12" x2="19" y2="12"></line>
                    </svg>
                    Add Item
                </button>
            </div>
        </div>

        <!-- Quick Stats -->
        <div class="quick-stats">
            <div class="stat-item">
                <span class="stat-number" id="totalItems">3</span>
                <span class="stat-label">Tổng items</span>
            </div>
            <div class="stat-item">
                <span class="stat-number" id="completedItems">0</span>
                <span class="stat-label">Đã hoàn thành</span>
            </div>
            <div class="stat-item">
                <span class="stat-number" id="remainingItems">3</span>
                <span class="stat-label">Còn lại</span>
            </div>
        </div>

        <!-- Shopping Items -->
        <div class="shopping-items">
            <div class="shopping-item" data-category="meat">
                <div class="item-checkbox">
                    <input type="checkbox" id="item1" class="checkbox-input">
                    <label for="item1" class="checkbox-label"></label>
                </div>
                <div class="item-content">
                    <div class="item-info">
                        <h5 class="item-name">Buy some meat</h5>
                        <span class="item-category">Thịt & Cá</span>
                        <p class="item-notes">Thịt bò tươi, khoảng 500g</p>
                    </div>
                    <div class="item-image">
                        <img src="~/images/recipes/today-suggestion.jpg" alt="Meat">
                    </div>
                </div>
                <div class="item-actions">
                    <button class="action-btn notes" onclick="toggleNotes(1)" title="Ghi chú">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                            <polyline points="14,2 14,8 20,8"></polyline>
                            <line x1="16" y1="13" x2="8" y2="13"></line>
                            <line x1="16" y1="17" x2="8" y2="17"></line>
                            <polyline points="10,9 9,9 8,9"></polyline>
                        </svg>
                    </button>
                    <button class="action-btn edit" onclick="editItem(1)">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                            <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                        </svg>
                    </button>
                    <button class="action-btn delete" onclick="deleteItem(1)">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="3,6 5,6 21,6"></polyline>
                            <path d="M19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2"></path>
                            <line x1="10" y1="11" x2="10" y2="17"></line>
                            <line x1="14" y1="11" x2="14" y2="17"></line>
                        </svg>
                    </button>
                </div>
            </div>

            <div class="shopping-item" data-category="grains">
                <div class="item-checkbox">
                    <input type="checkbox" id="item2" class="checkbox-input">
                    <label for="item2" class="checkbox-label"></label>
                </div>
                <div class="item-content">
                    <div class="item-info">
                        <h5 class="item-name">Buy rice</h5>
                        <span class="item-category">Ngũ cốc</span>
                        <p class="item-notes">Gạo thơm, túi 5kg</p>
                    </div>
                </div>
                <div class="item-actions">
                    <button class="action-btn notes" onclick="toggleNotes(2)" title="Ghi chú">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                            <polyline points="14,2 14,8 20,8"></polyline>
                            <line x1="16" y1="13" x2="8" y2="13"></line>
                            <line x1="16" y1="17" x2="8" y2="17"></line>
                            <polyline points="10,9 9,9 8,9"></polyline>
                        </svg>
                    </button>
                    <button class="action-btn edit" onclick="editItem(2)">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                            <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                        </svg>
                    </button>
                    <button class="action-btn delete" onclick="deleteItem(2)">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="3,6 5,6 21,6"></polyline>
                            <path d="M19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2"></path>
                            <line x1="10" y1="11" x2="10" y2="17"></line>
                            <line x1="14" y1="11" x2="14" y2="17"></line>
                        </svg>
                    </button>
                </div>
            </div>

            <div class="shopping-item" data-category="vegetables">
                <div class="item-checkbox">
                    <input type="checkbox" id="item3" class="checkbox-input">
                    <label for="item3" class="checkbox-label"></label>
                </div>
                <div class="item-content">
                    <div class="item-info">
                        <h5 class="item-name">Buy cucumber</h5>
                        <span class="item-category">Rau củ</span>
                        <p class="item-notes">Dưa chuột tươi, khoảng 1kg</p>
                    </div>
                    <div class="item-image">
                        <img src="~/images/recipes/Khoquet.webp" alt="Cucumber">
                    </div>
                </div>
                <div class="item-actions">
                    <button class="action-btn notes" onclick="toggleNotes(3)" title="Ghi chú">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                            <polyline points="14,2 14,8 20,8"></polyline>
                            <line x1="16" y1="13" x2="8" y2="13"></line>
                            <line x1="16" y1="17" x2="8" y2="17"></line>
                            <polyline points="10,9 9,9 8,9"></polyline>
                        </svg>
                    </button>
                    <button class="action-btn edit" onclick="editItem(3)">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                            <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                        </svg>
                    </button>
                    <button class="action-btn delete" onclick="deleteItem(3)">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="3,6 5,6 21,6"></polyline>
                            <path d="M19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2"></path>
                            <line x1="10" y1="11" x2="10" y2="17"></line>
                            <line x1="14" y1="11" x2="14" y2="17"></line>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Pagination -->
        <div class="pagination">
            <button class="pagination-btn">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="15,18 9,12 15,6"></polyline>
                </svg>
            </button>
            <button class="pagination-btn active">1</button>
            <button class="pagination-btn">2</button>
            <button class="pagination-btn">3</button>
            <button class="pagination-btn">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="9,18 15,12 9,6"></polyline>
                </svg>
            </button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Checkbox functionality
        document.addEventListener('DOMContentLoaded', function() {
            const checkboxes = document.querySelectorAll('.checkbox-input');
            
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    const shoppingItem = this.closest('.shopping-item');
                    if (this.checked) {
                        shoppingItem.classList.add('completed');
                    } else {
                        shoppingItem.classList.remove('completed');
                    }
                    updateStats();
                });
            });

            // Search functionality
            const searchInput = document.getElementById('searchInput');
            searchInput.addEventListener('input', function() {
                filterItems();
            });

            // Category filter functionality
            const categoryFilter = document.getElementById('categoryFilter');
            categoryFilter.addEventListener('change', function() {
                filterItems();
            });

            updateStats();
        });

        // Update statistics
        function updateStats() {
            const totalItems = document.querySelectorAll('.shopping-item').length;
            const completedItems = document.querySelectorAll('.shopping-item.completed').length;
            const remainingItems = totalItems - completedItems;

            document.getElementById('totalItems').textContent = totalItems;
            document.getElementById('completedItems').textContent = completedItems;
            document.getElementById('remainingItems').textContent = remainingItems;
        }

        // Filter items based on search and category
        function filterItems() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const selectedCategory = document.getElementById('categoryFilter').value;
            const items = document.querySelectorAll('.shopping-item');

            items.forEach(item => {
                const itemName = item.querySelector('.item-name').textContent.toLowerCase();
                const itemCategory = item.getAttribute('data-category');
                
                const matchesSearch = itemName.includes(searchTerm);
                const matchesCategory = !selectedCategory || itemCategory === selectedCategory;
                
                if (matchesSearch && matchesCategory) {
                    item.style.display = 'flex';
                } else {
                    item.style.display = 'none';
                }
            });
        }

        // Add new item function
        function addNewItem() {
            const itemName = prompt('Enter item name:');
            if (itemName && itemName.trim()) {
                const category = prompt('Enter category (meat, vegetables, grains, dairy, spices, other):');
                const notes = prompt('Enter notes (optional):');
                
                // Here you would typically add the item to the database
                alert('Item "' + itemName + '" added successfully!');
                updateStats();
            }
        }

        // Edit item function
        function editItem(itemId) {
            const item = document.querySelector(`#item${itemId}`).closest('.shopping-item');
            const currentName = item.querySelector('.item-name').textContent;
            const currentCategory = item.querySelector('.item-category').textContent;
            const currentNotes = item.querySelector('.item-notes').textContent;
            
            const newName = prompt('Edit item name:', currentName);
            if (newName && newName.trim() && newName !== currentName) {
                item.querySelector('.item-name').textContent = newName;
            }
            
            const newCategory = prompt('Edit category:', currentCategory);
            if (newCategory && newCategory.trim() && newCategory !== currentCategory) {
                item.querySelector('.item-category').textContent = newCategory;
            }
            
            const newNotes = prompt('Edit notes:', currentNotes);
            if (newNotes !== null && newNotes !== currentNotes) {
                item.querySelector('.item-notes').textContent = newNotes;
            }
        }

        // Delete item function
        function deleteItem(itemId) {
            if (confirm('Are you sure you want to delete this item?')) {
                // Here you would typically delete the item from the database
                const item = document.querySelector(`#item${itemId}`).closest('.shopping-item');
                item.remove();
                updateStats();
            }
        }

        // Toggle notes function
        function toggleNotes(itemId) {
            const item = document.querySelector(`#item${itemId}`).closest('.shopping-item');
            const notesElement = item.querySelector('.item-notes');
            const currentNotes = notesElement.textContent;
            
            const newNotes = prompt('Edit notes:', currentNotes);
            if (newNotes !== null && newNotes !== currentNotes) {
                notesElement.textContent = newNotes;
            }
        }

        // Pagination functionality
        document.addEventListener('DOMContentLoaded', function() {
            const paginationBtns = document.querySelectorAll('.pagination-btn');
            
            paginationBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    // Remove active class from all buttons
                    paginationBtns.forEach(b => b.classList.remove('active'));
                    
                    // Add active class to clicked button (if it's a number)
                    if (!isNaN(this.textContent.trim())) {
                        this.classList.add('active');
                    }
                });
            });
        });
    </script>
}
